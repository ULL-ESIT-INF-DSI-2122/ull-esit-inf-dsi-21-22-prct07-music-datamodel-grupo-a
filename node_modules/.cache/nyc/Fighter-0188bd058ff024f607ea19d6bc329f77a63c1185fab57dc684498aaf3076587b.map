{"version":3,"file":"/home/usuario/p6/src/ejercicio-01/Fighter.ts","sources":["/home/usuario/p6/src/ejercicio-01/Fighter.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAsB,OAAO;IACzB;;;;;;;;;OASG;IACH,YAA+B,MAAc,EAAY,IAAY,EAAY,MAAc,EAAY,MAAc,EAAY,OAAe,EAAY,EAAU,EAAY,SAAiB;QAAxK,WAAM,GAAN,MAAM,CAAQ;QAAY,SAAI,GAAJ,IAAI,CAAQ;QAAY,WAAM,GAAN,MAAM,CAAQ;QAAY,WAAM,GAAN,MAAM,CAAQ;QAAY,YAAO,GAAP,OAAO,CAAQ;QAAY,OAAE,GAAF,EAAE,CAAQ;QAAY,cAAS,GAAT,SAAS,CAAQ;IACvM,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,UAAU;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,KAAK;QACD,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,YAAY;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;IACpB,CAAC;CAOJ;AAnED,0BAmEC","sourcesContent":["/**\n * This is an abstract class\n */\nexport abstract class Fighter {\n    /**\n     * El constructor inicializa los parametos de la clase cuando se crea un objeto, en este caso derivada de esta\n     * @param nombre es el nombre del peleador\n     * @param peso su peso \n     * @param altura su altura\n     * @param ataque su ataque\n     * @param defensa la defensa que tiene sobre el ataque\n     * @param hp la cantidad de ataque que resiste\n     * @param velocidad la velocidad de ataque\n     */\n    constructor(protected readonly nombre: string, protected peso: number, protected altura: number, protected ataque: number, protected defensa: number, protected hp: number, protected velocidad: number) {\n    }\n\n    /**\n     * Es el getter del nombre\n     * @return retora el nombre del peleador\n     */\n    getNombre():string {\n        return this.nombre;\n    }\n\n    /**\n     * Es el getter del ataque\n     * @return retora el ataque del peleador\n     */\n    getAtaque(): number {\n        return this.ataque;\n    }\n\n    /**\n     * Es el getter de la defensa\n     * @return retora la defensa del peleador\n     */\n    getDefensa(): number {\n        return this.defensa;\n    }\n\n    /**\n     * Es el getter de la vida\n     * @return retora la vida del peleador\n     */\n    getHp(): number {\n        return this.hp;\n    }\n\n    /**\n     * Es el getter de la velocidad\n     * @return retora la velocidad que tiene el peleador\n     */\n    getVelocidad(): number {\n        return this.velocidad;\n    }\n\n    /**\n     * La salud se puede cambiar ya que cuando recibe un ataque esta disminuye\n     * @param newHp es la nueva salud que va a tener el peleador\n     */\n    setHp(newHp: number) {\n        this.hp = newHp;\n    }\n\n    /**\n     * Este m√©todo lo tienen que implementar todas las clases derivadas de esta.\n     */\n    abstract gritoDeAtaque(): string;\n    \n}\n\n"]}